define(["marionette","player/base/base-item-comp"],function(t,e){var s;return s=e.extend({objData:null,textBoxRef:null,preValue:null,initialize:function(t){this.objData=t,this.componentType="inputtext",this.template="true"===this.objData.multiline||this.objData.multiline===!0?_.template("<textarea></textarea>"):_.template('<input type="text" id=""  />')},handleInputTextEvents:function(t){var e=t.data;e.customEventDispatcher(t.type,e,t),e.customEventDispatcher("stateChanged",e,e.getText())},sendStatement:function(){""!==this.getText()&&" "!==this.getText()&&this.preValue!==this.getText()&&(this.preValue=this.getText(),this.sendStatementToLRS("typed_",this.getText()))},onShow:function(){this.preInitScreenElement(),this.customEventDispatcher(this.eventConst.CREATION_COMPLETE,this,this)},setText:function(t){this.textBoxRef.val(t)},getText:function(){return this.textBoxRef.val()},getState:function(){return this.getText()},setState:function(t){this.setText(t)},isReady:function(){return this.getText().length>0?!0:!1}}),s.prototype.preInitScreenElement=function(){var t=this;this.textBoxRef=$(this.$el.children()[0]),void 0!==this.objData.styleClass&&(this.$el.addClass(this.objData.styleClass),this.$el.css("border","none"),$(this.textBoxRef).addClass(this.objData.styleClass),$(this.textBoxRef).css("poistion","absolute"),$(this.textBoxRef).css("left","0px"),$(this.textBoxRef).css("top","0px"),this.objData.placeholder&&$(this.textBoxRef).attr("placeholder",this.objData.placeholder),this.objData.dir&&$(this.textBoxRef).attr("dir",this.objData.dir),this.objData.type&&$(this.textBoxRef).attr("type",this.objData.type)),this.bEditor===!1?(this.textBoxRef.on("keyup input",t,t.handleInputTextEvents),this.textBoxRef.on("focusout",t,t.handleInputTextEvents),this.textBoxRef.on("focusin",t,t.handleInputTextEvents),$(this.textBoxRef).attr("value",this.objData.text)):$(this.textBoxRef).css("pointer-events","none")},s.prototype.getValue=function(){return this.$el.find("input").val().trim()},s.prototype.TextBoxSuper=e,s.prototype.destroy=function(){return this.textBoxRef.off("keyup input"),this.textBoxRef.off("stateChanged"),this.textBoxRef.off("focusout"),this.textBoxRef.off("focusin"),this.textBoxRef=null,this.TextBoxSuper.prototype.destroy.call(this,!0)},s});